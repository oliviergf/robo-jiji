{"version":3,"sources":["services/axios.js","components/Register.js","components/Login.js","services/pushManager.js","components/Home.js","components/Map.js","components/ZoneList.js","components/ZoneMenu.js","components/Bar.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","withCredentials","Register","props","handleChange","evt","setState","target","name","value","handleRegisterInput","post","firstname","state","lastname","email","password","then","response","console","log","catch","error","preventDefault","confirmation","onSubmit","this","FormControl","InputLabel","htmlFor","Input","id","onChange","Button","type","React","Component","Login","self","logUserIn","data","fireRedirect","to","urlBase64ToUint8Array","base64String","base64","repeat","length","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","startPushNotification","a","async","navigator","serviceWorker","ready","registration","pushManager","subscribe","userVisibleOnly","applicationServerKey","subscription","fetch","method","body","JSON","stringify","headers","Home","Container","className","Box","justifyContent","alignItems","style","textDecoration","color","onClick","require","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","DrawingManager","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","defaultZoom","defaultCenter","lat","userLocation","lng","showDrawManager","defaultDrawingMode","defaultOptions","drawingControl","drawingControlOptions","position","drawingModes","polygonOptions","editable","onPolygonComplete","complete","zonesToDisplay","map","zone","polygon","key","path","getPath","useStyles","makeStyles","theme","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","paper","title","margin","spacing","InteractiveList","zoneList","deleteZoneFunc","onSelect","classes","Grid","container","item","xs","md","Typography","variant","List","ListItem","button","zoneId","selected","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","ZoneMenu","findUserCoord","userPosition","geolocation","getCurrentPosition","pos","coords","latitude","longitude","componentDidMount","setTimeout","get","initZones","zones","newPolygon","google","maps","Polygon","geodesic","strokeColor","strokeOpacity","strokeWeight","push","onZoneSelect","onCreateClick","allowDraw","onDeleteClick","delete","status","zoneToDelete","find","setMap","filter","newZone","uuidv4","points","test","Map","isMarkerShown","Bar","handleClick","event","anchorEl","currentTarget","handleClose","handleLogOut","userLoggedOut","loginArea","isLoggedIn","aria-controls","aria-haspopup","userFirstName","Menu","keepMounted","open","Boolean","onClose","MenuItem","AppBar","Toolbar","withStyles","menuButton","marginRight","withTheme","App","logoutHandeler","logUserCredentials","user","testBrowserSession","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b05d3e3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  withCredentials: true\n});\n\nexport default api;\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n  Link\n} from \"@material-ui/core/\";\n\n/**\n * TODO: implement validation and redirect correctly to somewhere when user is logged in\n */\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmation: \"\"\n    };\n  }\n\n  handleChange = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  handleRegisterInput = evt => {\n    axios\n      .post(\"http://localhost:3000/register\", {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        password: this.state.password\n      })\n      .then(function(response) {\n        console.log(response);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    evt.preventDefault();\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleRegisterInput}>\n        <div>\n          <FormControl>\n            <InputLabel htmlFor=\"component-simple\">firstname</InputLabel>\n            <Input\n              id=\"component-simple\"\n              name=\"firstname\"\n              value={this.state.firstname}\n              onChange={this.handleChange}\n            />\n          </FormControl>\n        </div>\n        <div>\n          <FormControl>\n            <InputLabel htmlFor=\"component-simple\">lastname</InputLabel>\n            <Input\n              id=\"component-simple\"\n              name=\"lastname\"\n              value={this.state.lastname}\n              onChange={this.handleChange}\n            />\n          </FormControl>\n        </div>\n        <div>\n          <FormControl>\n            <InputLabel htmlFor=\"component-simple\">email</InputLabel>\n            <Input\n              id=\"component-simple\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </FormControl>\n        </div>\n        <div>\n          <FormControl>\n            <InputLabel htmlFor=\"component-simple\">password</InputLabel>\n            <Input\n              id=\"component-simple\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </FormControl>\n        </div>\n        <div>\n          <FormControl>\n            <InputLabel htmlFor=\"component-simple\">confirmation</InputLabel>\n            <Input\n              id=\"component-simple\"\n              name=\"confirmation\"\n              value={this.state.confirmation}\n              onChange={this.handleChange}\n            />\n          </FormControl>\n        </div>\n        <div>\n          <Button type=\"submit\" value=\"Submit\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\nexport default Register;\n","import React from \"react\";\nimport axios from \"../services/axios\";\nimport { FormControl, InputLabel, Input, Button } from \"@material-ui/core/\";\nimport { Redirect } from \"react-router\";\n\n/**\n * TODO: ajouter validation du input et afficher a l'utilisateur why son nom fuck\n */\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      fireRedirect: false\n    };\n  }\n\n  handleChange = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  handleRegisterInput = evt => {\n    let self = this;\n    axios\n      .post(\"http://localhost:3000/login\", {\n        email: this.state.email,\n        password: this.state.password\n      })\n      .then(function(response) {\n        //send back userdata to App component\n        self.props.logUserIn(response.data);\n        self.setState({ fireRedirect: true });\n        //redirects to home\n        // history.push(\"/home\");\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    evt.preventDefault();\n  };\n\n  render() {\n    const { fireRedirect } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleRegisterInput}>\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"component-simple\">email</InputLabel>\n              <Input\n                id=\"component-simple\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n            </FormControl>\n          </div>\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"component-simple\">password</InputLabel>\n              <Input\n                id=\"component-simple\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </FormControl>\n          </div>\n          <div>\n            <Button type=\"submit\" value=\"login\">\n              login\n            </Button>\n          </div>\n        </form>\n        {fireRedirect && <Redirect to={\"/home\"} />}\n      </div>\n    );\n  }\n}\nexport default Login;\n","//public vapid of our server!\nconst publicVapidKey =\n  \"BFkjlGMNKytjD2oOnED0Zb9ENXZqopsSRAQjZMun-RQDzjy6AX7qOpMHNjeVnYgBXSdgnf783Y1nSt9DwmqG8ko\";\n\n/**\n * urlBase64ToUint8Array\n *\n * @param {string} base64String a public vavid key\n */\nfunction urlBase64ToUint8Array(base64String) {\n  var padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\");\n\n  var rawData = window.atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n\nexport default async function startPushNotification() {\n  let registration = await navigator.serviceWorker.ready;\n  try {\n    const subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      // The `urlBase64ToUint8Array()` function is the same as in\n      // https://www.npmjs.com/package/web-push#using-vapid-key-for-applicationserverkey\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n    });\n    console.log(\"Registered push\");\n    console.log(\"Sending push\");\n    await fetch(\"/subscribeNotif\", {\n      method: \"POST\",\n      body: JSON.stringify(subscription),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    console.log(\"Sent push\");\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import React from \"react\";\nimport { Container, Box, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport pushManager from \"../services/pushManager\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Container className=\"home\">\n        <Box justifyContent=\"center\" alignItems=\"center\">\n          <div>put nice image here</div>\n          <div>description of what we do</div>\n          <Button>\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"/register\"\n            >\n              Subscribe\n            </Link>\n          </Button>\n          <Button>\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"/login\"\n            >\n              Login\n            </Link>\n          </Button>\n          <Button onClick={pushManager}>push test</Button>\n        </Box>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Polygon } from \"react-google-maps\";\nconst { compose, withProps } = require(\"recompose\");\nconst { withScriptjs, withGoogleMap, GoogleMap } = require(\"react-google-maps\");\nconst {\n  DrawingManager\n} = require(\"react-google-maps/lib/components/drawing/DrawingManager\");\n\n//https://blog.logrocket.com/using-recompose-to-write-clean-higher-order-components-3019a6daf44c/\n//todo: transform this with recompose and highorder component.... need to learn bout that shit. and call useeffect to call component didmount in zonemenu\nconst MyMapComponent = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBnIReQN29uQlQ9XPcplFlm5R8XnU2n0i4&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => (\n  <GoogleMap\n    defaultZoom={12}\n    defaultCenter={{ lat: props.userLocation.lat, lng: props.userLocation.lng }}\n  >\n    {props.showDrawManager && (\n      <DrawingManager\n        defaultDrawingMode={\"polygon\"}\n        defaultOptions={{\n          drawingControl: true,\n          drawingControlOptions: {\n            position: \"\",\n            drawingModes: [\"polygon\"]\n          },\n          polygonOptions: {\n            editable: false\n          }\n        }}\n        onPolygonComplete={value => props.complete(value)}\n      />\n    )}\n    {props.zonesToDisplay.map(zone => {\n      console.log(zone.polygon);\n      return <Polygon key={zone.id} path={zone.polygon.getPath()} />;\n    })}\n  </GoogleMap>\n));\n\nexport default MyMapComponent;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst selected = (zoneId, onSelect) => {\n  //passes zone id to ZoneMenu to change color\n  onSelect(zoneId);\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  },\n  title: {\n    margin: theme.spacing(4, 0, 2)\n  }\n}));\n\nfunction generate(zoneList, deleteZoneFunc, onSelect) {\n  if (zoneList.length !== 0) {\n    return zoneList.map(zone => (\n      <ListItem\n        button={true}\n        name={zone.id}\n        key={zone.id}\n        onClick={() => {\n          selected(zone.id, onSelect);\n        }}\n      >\n        <ListItemAvatar>\n          <Avatar>\n            <FolderIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"Single-line item\" />\n        <ListItemSecondaryAction>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => deleteZoneFunc(zone.id)}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    ));\n  } else {\n    return (\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <FolderIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"you have no zones!\" />\n      </ListItem>\n    );\n  }\n}\n\nexport default function InteractiveList(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <Typography variant=\"h6\" className={classes.title}>\n            Selected Zones\n          </Typography>\n          <div className={classes.demo}>\n            <List>\n              {generate(props.zoneList, props.deleteZoneFunc, props.onSelect)}\n            </List>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Map from \"./Map\";\nimport ZoneList from \"./ZoneList\";\nimport { Container, Button } from \"@material-ui/core\";\nimport uuidv4 from \"uuid/v4\";\nimport axios from \"../services/axios\";\n\n// todo: implement select zone in list\nclass ZoneMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: {},\n      zones: [],\n      allowDraw: false,\n      userLocation: this.findUserCoord() //or call findUserCoord but fucks sometime...\n    };\n  }\n\n  findUserCoord = () => {\n    let userPosition = {};\n    navigator.geolocation.getCurrentPosition(\n      pos => {\n        userPosition.lat = pos.coords.latitude;\n        userPosition.lng = pos.coords.longitude;\n      },\n      () => {\n        //error handeler\n        userPosition.lat = 45.496205;\n        userPosition.lng = -73.571895;\n      }\n    );\n\n    return userPosition;\n  };\n\n  componentDidMount = () => {\n    let self = this;\n    // total hack; we had to wait for map component to render before using the GoogleMap object,\n    // its necessary for appending new zones to the map\n\n    // todo: fix this shit; add\n    setTimeout(function() {\n      axios\n        .get(\"http://localhost:3000/zone\")\n        .then(function(response) {\n          // handle success\n          self.initZones(response.data);\n        })\n        .catch(function(error) {\n          // handle error\n          console.log(error);\n        })\n        .then(function() {\n          // always executed\n        });\n    }, 300);\n  };\n\n  /**\n   * Receives the zones the user has and append them to state to be displayed\n   */\n  initZones = zones => {\n    let zonesToDisplay = [];\n    zones.map(zone => {\n      const coords = zone.path.map(pos => ({\n        lat: pos[0],\n        lng: pos[1]\n      }));\n      const newPolygon = new window.google.maps.Polygon({\n        path: coords,\n        geodesic: true,\n        strokeColor: \"#FF0000\",\n        strokeOpacity: 1.0,\n        strokeWeight: 2\n      });\n      //create a new zone to be used in state\n      zonesToDisplay.push({ id: zone.zoneId, polygon: newPolygon });\n    });\n    this.setState({\n      zones: zonesToDisplay\n    });\n  };\n\n  //todo:does not work :  shit it\n  onZoneSelect = zoneId => {\n    console.log(zoneId);\n    // //doesnt work\n    // const zonesColored = this.state.zones.map(zone => {\n    //   if (zone.id === zoneId) {\n    //     let poly = zone.polygon;\n    //     poly.setOptions({ fillColor: \"#FF00FF\" });\n    //     return {\n    //       polygon: poly,\n    //       id: zone.id\n    //     };\n    //   } else {\n    //     let poly = zone.polygon;\n    //     poly.setOptions({ fillColor: \"#FF00FF\" });\n    //     return {\n    //       polygon: poly,\n    //       id: zone.id\n    //     };\n    //   }\n    // });\n\n    // this.setState({ zones: zonesColored });\n\n    //might want to trigger rerender to pass zones to zonelist?\n  };\n\n  /**\n   * allows the user to draw on the map\n   */\n  onCreateClick = () => {\n    //allowdraw\n    this.setState({ allowDraw: true });\n  };\n\n  onDeleteClick = zoneId => {\n    let self = this;\n    axios\n      .delete(\"http://localhost:3000/zone\", {\n        data: {\n          zoneId: zoneId\n        }\n      })\n      .then(function(response) {\n        //if everything is OK, delete the zone from state too\n        if (response.status === 200) {\n          //deletes the targeted zone\n          let zoneToDelete = self.state.zones.find(zone => zone.id === zoneId);\n          zoneToDelete.polygon.setMap(null);\n\n          //removes it from state zones\n          self.setState({\n            zones: self.state.zones.filter(zone => zone.id !== zoneToDelete.id)\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  //will be called when a polygon is complete; value is the gmaps formated polygon\n  onPolygonComplete = value => {\n    //create a new zone to be used in state\n    let newZone = { id: uuidv4(), polygon: value };\n    this.setState({\n      zones: [...this.state.zones, newZone],\n      allowDraw: false\n    });\n\n    let points = [];\n    //adds the path of the newly created zone\n    value.getPath().i.map(pos => points.push([pos.lat(), pos.lng()]));\n\n    axios\n      .post(\"http://localhost:3000/zone\", {\n        zoneId: newZone.id,\n        path: points\n      })\n      .then(function(response) {\n        console.log(response);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <Container className=\"home\">\n        <Button onClick={this.onCreateClick}>create</Button>\n        <Map\n          isMarkerShown\n          complete={this.onPolygonComplete}\n          showDrawManager={this.state.allowDraw}\n          zonesToDisplay={this.state.zones}\n          userLocation={this.state.userLocation}\n        />\n        <ZoneList\n          zoneList={this.state.zones}\n          deleteZoneFunc={this.onDeleteClick}\n          onSelect={this.onZoneSelect}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default ZoneMenu;\n","import React from \"react\";\nimport axios from \"../services/axios\";\nimport \"typeface-roboto\";\nimport \"../App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n});\n\nclass Bar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null\n    };\n  }\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleLogOut = () => {\n    let self = this;\n    axios\n      .get(\"http://localhost:3000/logout\")\n      .then(function(response) {\n        // handle success\n        self.setState({\n          anchorEl: null\n        });\n        self.props.userLoggedOut();\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let loginArea;\n\n    if (this.props.isLoggedIn) {\n      loginArea = (\n        <div>\n          <Button\n            style={{ textDecoration: \"none\", color: \"white\" }}\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={this.handleClick}\n          >\n            {this.props.userFirstName}\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={this.state.anchorEl}\n            keepMounted\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem onClick={this.handleClose}>Profile</MenuItem>\n            <MenuItem onClick={this.handleClose}>My account</MenuItem>\n            <MenuItem onClick={this.handleLogOut}>\n              <Link to=\"/home\">Logout</Link>\n            </MenuItem>\n          </Menu>\n        </div>\n      );\n    } else {\n      loginArea = (\n        <Button edge=\"start\" color=\"inherit\">\n          <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/login\">\n            login\n          </Link>\n        </Button>\n      );\n    }\n    return (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Button edge=\"start\" color=\"inherit\">\n            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/home\">\n              home\n            </Link>\n          </Button>\n          <Button edge=\"start\" color=\"inherit\">\n            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/map\">\n              Map\n            </Link>\n          </Button>\n          <Typography variant=\"h6\" className={classes.title}>\n            Kijiji Bot App\n          </Typography>\n          {loginArea}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\n//with Styles is passed as props.\nexport default withStyles(styles, { withTheme: true })(Bar);\n","import React from \"react\";\nimport axios from \"./services/axios\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nimport ZoneMenu from \"./components/ZoneMenu\";\nimport Bar from \"./components/Bar\";\nimport \"typeface-roboto\";\nimport \"./App.css\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n});\n\n/**\n * watch this video for push notifications : https://www.youtube.com/watch?v=N9zpRvFRmj8\n */\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      userFirstName: \"\",\n      anchorEl: null\n    };\n    this.testBrowserSession();\n  }\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  logoutHandeler = () => {\n    this.setState({ isLoggedIn: false, userFirstName: \"\" });\n  };\n\n  logUserCredentials = user => {\n    this.setState({\n      isLoggedIn: true,\n      userFirstName: user.firstname\n    });\n  };\n\n  //test whether the current browser contains a valid session\n  testBrowserSession = () => {\n    let self = this;\n    axios\n      .get(\"http://localhost:3000/sessionLogin\")\n      .then(function(response) {\n        self.logUserCredentials(response.data);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className=\"App\">\n        <div className={classes.root}>\n          <Bar\n            userLoggedOut={this.logoutHandeler}\n            isLoggedIn={this.state.isLoggedIn}\n            userFirstName={this.state.userFirstName}\n          />\n        </div>\n        <div className=\"body\">\n          <Switch>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/login\">\n              <Login logUserIn={this.logUserCredentials} />\n            </Route>\n            <Route path=\"/map\">\n              <ZoneMenu />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\n//with Styles is passed as props.\nexport default withStyles(styles, { withTheme: true })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}